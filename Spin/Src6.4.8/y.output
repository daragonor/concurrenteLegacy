Terminals unused in grammar

   PREPROC
   MTYPE
   LABEL
   NON_ATOMIC


State 143 conflicts: 6 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: units

    2 units: unit
    3      | units unit

    4 unit: proc
    5     | init
    6     | claim
    7     | ltl
    8     | events
    9     | one_decl
   10     | utype
   11     | c_fcts
   12     | ns
   13     | semi
   14     | error

   15 l_par: '('

   16 r_par: ')'

   17 $@1: %empty

   18 $@2: %empty

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body

   20 proctype: PROCTYPE
   21         | D_PROCTYPE

   22 inst: %empty
   23     | ACTIVE
   24     | ACTIVE '[' const_expr ']'
   25     | ACTIVE '[' NAME ']'

   26 $@3: %empty

   27 init: INIT $@3 Opt_priority body

   28 $@4: %empty

   29 ltl: LTL optname2 $@4 ltl_body

   30 ltl_body: '{' full_expr OS '}'
   31         | error

   32 $@5: %empty

   33 claim: CLAIM optname $@5 body

   34 optname: %empty
   35        | NAME

   36 optname2: %empty
   37         | NAME

   38 $@6: %empty

   39 events: TRACE $@6 body

   40 $@7: %empty

   41 utype: TYPEDEF NAME '{' $@7 decl_lst '}'

   42 nm: NAME
   43   | INAME

   44 $@8: %empty

   45 ns: INLINE nm l_par $@8 args r_par

   46 c_fcts: ccode
   47       | cstate

   48 cstate: C_STATE STRING STRING
   49       | C_TRACK STRING STRING
   50       | C_STATE STRING STRING STRING
   51       | C_TRACK STRING STRING STRING

   52 ccode: C_CODE
   53      | C_DECL

   54 cexpr: C_EXPR

   55 $@9: %empty

   56 $@10: %empty

   57 body: '{' $@9 sequence OS $@10 '}'

   58 sequence: step
   59         | sequence MS step

   60 step: one_decl
   61     | XU vref_lst
   62     | NAME ':' one_decl
   63     | NAME ':' XU
   64     | stmnt

   65 $@11: %empty

   66 step: stmnt UNLESS $@11 stmnt
   67     | error

   68 vis: %empty
   69    | HIDDEN
   70    | SHOW
   71    | ISLOCAL

   72 asgn: %empty
   73     | ':' NAME ASGN
   74     | ASGN

   75 osubt: %empty
   76      | ':' NAME

   77 one_decl: vis TYPE osubt var_list
   78         | vis UNAME var_list
   79         | vis TYPE asgn '{' nlst '}'

   80 decl_lst: one_decl
   81         | one_decl SEMI decl_lst

   82 decl: %empty
   83     | decl_lst

   84 vref_lst: varref
   85         | varref ',' vref_lst

   86 var_list: ivar
   87         | ivar ',' var_list

   88 c_list: CONST
   89       | CONST ',' c_list

   90 ivar: vardcl
   91     | vardcl ASGN '{' c_list '}'
   92     | vardcl ASGN expr
   93     | vardcl ASGN ch_init

   94 ch_init: '[' const_expr ']' OF '{' typ_list '}'

   95 vardcl: NAME
   96       | NAME ':' CONST
   97       | NAME '[' const_expr ']'
   98       | NAME '[' NAME ']'

   99 varref: cmpnd

  100 pfld: NAME

  101 $@12: %empty

  102 pfld: NAME $@12 '[' expr ']'

  103 $@13: %empty

  104 cmpnd: pfld $@13 sfld

  105 sfld: %empty
  106     | '.' cmpnd

  107 stmnt: Special
  108      | Stmnt

  109 $@14: %empty

  110 for_pre: FOR l_par $@14 varref

  111 for_post: '{' sequence OS '}'
  112         | SEMI '{' sequence OS '}'

  113 $@15: %empty

  114 Special: varref RCV $@15 rargs

  115 $@16: %empty

  116 Special: varref SND $@16 margs

  117 $@17: %empty

  118 Special: for_pre ':' expr DOTDOT expr r_par $@17 for_post

  119 @18: %empty

  120 Special: for_pre IN varref r_par @18 for_post
  121        | SELECT l_par varref ':' expr DOTDOT expr r_par
  122        | IF options FI

  123 $@19: %empty

  124 Special: DO $@19 options OD
  125        | BREAK
  126        | GOTO NAME
  127        | NAME ':' stmnt
  128        | NAME ':'
  129        | error

  130 Stmnt: varref ASGN full_expr
  131      | varref INCR
  132      | varref DECR
  133      | SET_P l_par two_args r_par

  134 $@20: %empty

  135 Stmnt: PRINT l_par STRING $@20 prargs r_par
  136      | PRINTM l_par varref r_par
  137      | PRINTM l_par CONST r_par
  138      | ASSERT full_expr
  139      | ccode

  140 $@21: %empty

  141 Stmnt: varref R_RCV $@21 rargs

  142 $@22: %empty

  143 Stmnt: varref RCV $@22 LT rargs GT

  144 $@23: %empty

  145 Stmnt: varref R_RCV $@23 LT rargs GT

  146 $@24: %empty

  147 Stmnt: varref O_SND $@24 margs
  148      | full_expr
  149      | ELSE

  150 $@25: %empty

  151 Stmnt: ATOMIC '{' $@25 sequence OS '}'

  152 $@26: %empty

  153 Stmnt: D_STEP '{' $@26 sequence OS '}'

  154 $@27: %empty

  155 Stmnt: '{' $@27 sequence OS '}'

  156 $@28: %empty

  157 $@29: %empty

  158 Stmnt: INAME $@28 l_par args r_par $@29 Stmnt

  159 $@30: %empty

  160 $@31: %empty

  161 Stmnt: varref ASGN INAME $@30 l_par args r_par $@31 Stmnt
  162      | RETURN full_expr

  163 options: option
  164        | option options

  165 $@32: %empty

  166 option: SEP $@32 sequence OS

  167 OS: %empty
  168   | semi

  169 semi: SEMI
  170     | ARROW

  171 MS: semi
  172   | MS semi

  173 aname: NAME
  174      | PNAME

  175 const_expr: CONST
  176           | '-' const_expr
  177           | l_par const_expr r_par
  178           | const_expr '+' const_expr
  179           | const_expr '-' const_expr
  180           | const_expr '*' const_expr
  181           | const_expr '/' const_expr
  182           | const_expr '%' const_expr

  183 expr: l_par expr r_par
  184     | expr '+' expr
  185     | expr '-' expr
  186     | expr '*' expr
  187     | expr '/' expr
  188     | expr '%' expr
  189     | expr '&' expr
  190     | expr '^' expr
  191     | expr '|' expr
  192     | expr GT expr
  193     | expr LT expr
  194     | expr GE expr
  195     | expr LE expr
  196     | expr EQ expr
  197     | expr NE expr
  198     | expr AND expr
  199     | expr OR expr
  200     | expr LSHIFT expr
  201     | expr RSHIFT expr
  202     | '~' expr
  203     | '-' expr
  204     | SND expr
  205     | l_par expr ARROW expr ':' expr r_par

  206 $@33: %empty

  207 expr: RUN aname $@33 l_par args r_par Opt_priority
  208     | LEN l_par varref r_par
  209     | ENABLED l_par expr r_par
  210     | GET_P l_par expr r_par

  211 $@34: %empty

  212 expr: varref RCV $@34 '[' rargs ']'

  213 $@35: %empty

  214 expr: varref R_RCV $@35 '[' rargs ']'
  215     | varref
  216     | cexpr
  217     | CONST
  218     | TIMEOUT
  219     | NONPROGRESS
  220     | PC_VAL l_par expr r_par
  221     | PNAME '[' expr ']' '@' NAME
  222     | PNAME '[' expr ']' ':' pfld
  223     | PNAME '@' NAME
  224     | PNAME ':' pfld
  225     | ltl_expr

  226 Opt_priority: %empty
  227             | PRIORITY CONST

  228 full_expr: expr
  229          | Expr

  230 ltl_expr: expr UNTIL expr
  231         | expr RELEASE expr
  232         | expr WEAK_UNTIL expr
  233         | expr IMPLIES expr
  234         | expr EQUIV expr
  235         | NEXT expr
  236         | ALWAYS expr
  237         | EVENTUALLY expr

  238 Expr: Probe
  239     | l_par Expr r_par
  240     | Expr AND Expr
  241     | Expr AND expr
  242     | expr AND Expr
  243     | Expr OR Expr
  244     | Expr OR expr
  245     | expr OR Expr

  246 Probe: FULL l_par varref r_par
  247      | NFULL l_par varref r_par
  248      | EMPTY l_par varref r_par
  249      | NEMPTY l_par varref r_par

  250 Opt_enabler: %empty
  251            | PROVIDED l_par full_expr r_par
  252            | PROVIDED error

  253 oname: %empty
  254      | ':' NAME

  255 basetype: TYPE oname
  256         | UNAME
  257         | error

  258 typ_list: basetype
  259         | basetype ',' typ_list

  260 two_args: expr ',' expr

  261 args: %empty
  262     | arg

  263 prargs: %empty
  264       | ',' arg

  265 margs: arg
  266      | expr l_par arg r_par

  267 arg: expr
  268    | expr ',' arg

  269 rarg: varref
  270     | EVAL l_par expr r_par
  271     | CONST
  272     | '-' CONST

  273 rargs: rarg
  274      | rarg ',' rargs
  275      | rarg l_par rargs r_par
  276      | l_par rargs r_par

  277 nlst: NAME
  278     | nlst NAME
  279     | nlst ','


Terminals, with rules where they appear

$end (0) 0
'%' (37) 182 188
'&' (38) 189
'(' (40) 15
')' (41) 16
'*' (42) 180 186
'+' (43) 178 184
',' (44) 85 87 89 259 260 264 268 274 279
'-' (45) 176 179 185 203 272
'.' (46) 106
'/' (47) 181 187
':' (58) 62 63 73 76 96 118 121 127 128 205 222 224 254
'@' (64) 221 223
'[' (91) 24 25 94 97 98 102 212 214 221 222
']' (93) 24 25 94 97 98 102 212 214 221 222
'^' (94) 190
'{' (123) 30 41 57 79 91 94 111 112 151 153 155
'|' (124) 191
'}' (125) 30 41 57 79 91 94 111 112 151 153 155
'~' (126) 202
error (256) 14 31 67 129 252 257
ASSERT (258) 138
PRINT (259) 135
PRINTM (260) 136 137
PREPROC (261)
C_CODE (262) 52
C_DECL (263) 53
C_EXPR (264) 54
C_STATE (265) 48 50
C_TRACK (266) 49 51
RUN (267) 207
LEN (268) 208
ENABLED (269) 209
SET_P (270) 133
GET_P (271) 210
EVAL (272) 270
PC_VAL (273) 220
TYPEDEF (274) 41
MTYPE (275)
INLINE (276) 45
RETURN (277) 162
LABEL (278)
OF (279) 94
GOTO (280) 126
BREAK (281) 125
ELSE (282) 149
SEMI (283) 81 112 169
ARROW (284) 170 205
IF (285) 122
FI (286) 122
DO (287) 124
OD (288) 124
FOR (289) 110
SELECT (290) 121
IN (291) 120
SEP (292) 166
DOTDOT (293) 118 121
ATOMIC (294) 151
NON_ATOMIC (295)
D_STEP (296) 153
UNLESS (297) 66
TIMEOUT (298) 218
NONPROGRESS (299) 219
ACTIVE (300) 23 24 25
PROCTYPE (301) 20
D_PROCTYPE (302) 21
HIDDEN (303) 69
SHOW (304) 70
ISLOCAL (305) 71
PRIORITY (306) 227
PROVIDED (307) 251 252
FULL (308) 246
EMPTY (309) 248
NFULL (310) 247
NEMPTY (311) 249
CONST (312) 88 89 96 137 175 217 227 271 272
TYPE (313) 77 79 255
XU (314) 61 63
NAME (315) 19 25 35 37 41 42 62 63 73 76 95 96 97 98 100 102 126 127
    128 173 221 223 254 277 278
UNAME (316) 78 256
PNAME (317) 174 221 222 223 224
INAME (318) 43 158 161
STRING (319) 48 49 50 51 135
CLAIM (320) 33
TRACE (321) 39
INIT (322) 27
LTL (323) 29
ASGN (324) 73 74 91 92 93 130 161
SND (325) 116 204
O_SND (326) 147
RCV (327) 114 143 212
R_RCV (328) 141 145 214
IMPLIES (329) 233
EQUIV (330) 234
OR (331) 199 243 244 245
AND (332) 198 240 241 242
ALWAYS (333) 236
EVENTUALLY (334) 237
UNTIL (335) 230
WEAK_UNTIL (336) 232
RELEASE (337) 231
NEXT (338) 235
EQ (339) 196
NE (340) 197
GT (341) 143 145 192
LT (342) 143 145 193
GE (343) 194
LE (344) 195
LSHIFT (345) 200
RSHIFT (346) 201
INCR (347) 131
DECR (348) 132
UMIN (349)
NEG (350)
DOT (351)


Nonterminals, with rules where they appear

$accept (116)
    on left: 0
program (117)
    on left: 1, on right: 0
units (118)
    on left: 2 3, on right: 1 3
unit (119)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3
l_par (120)
    on left: 15, on right: 19 45 110 121 133 135 136 137 158 161 177
    183 205 207 208 209 210 220 239 246 247 248 249 251 266 270 275
    276
r_par (121)
    on left: 16, on right: 19 45 118 120 121 133 135 136 137 158 161
    177 183 205 207 208 209 210 220 239 246 247 248 249 251 266 270
    275 276
proc (122)
    on left: 19, on right: 4
$@1 (123)
    on left: 17, on right: 19
$@2 (124)
    on left: 18, on right: 19
proctype (125)
    on left: 20 21, on right: 19
inst (126)
    on left: 22 23 24 25, on right: 19
init (127)
    on left: 27, on right: 5
$@3 (128)
    on left: 26, on right: 27
ltl (129)
    on left: 29, on right: 7
$@4 (130)
    on left: 28, on right: 29
ltl_body (131)
    on left: 30 31, on right: 29
claim (132)
    on left: 33, on right: 6
$@5 (133)
    on left: 32, on right: 33
optname (134)
    on left: 34 35, on right: 33
optname2 (135)
    on left: 36 37, on right: 29
events (136)
    on left: 39, on right: 8
$@6 (137)
    on left: 38, on right: 39
utype (138)
    on left: 41, on right: 10
$@7 (139)
    on left: 40, on right: 41
nm (140)
    on left: 42 43, on right: 45
ns (141)
    on left: 45, on right: 12
$@8 (142)
    on left: 44, on right: 45
c_fcts (143)
    on left: 46 47, on right: 11
cstate (144)
    on left: 48 49 50 51, on right: 47
ccode (145)
    on left: 52 53, on right: 46 139
cexpr (146)
    on left: 54, on right: 216
body (147)
    on left: 57, on right: 19 27 33 39
$@9 (148)
    on left: 55, on right: 57
$@10 (149)
    on left: 56, on right: 57
sequence (150)
    on left: 58 59, on right: 57 59 111 112 151 153 155 166
step (151)
    on left: 60 61 62 63 64 66 67, on right: 58 59
$@11 (152)
    on left: 65, on right: 66
vis (153)
    on left: 68 69 70 71, on right: 77 78 79
asgn (154)
    on left: 72 73 74, on right: 79
osubt (155)
    on left: 75 76, on right: 77
one_decl (156)
    on left: 77 78 79, on right: 9 60 62 80 81
decl_lst (157)
    on left: 80 81, on right: 41 81 83
decl (158)
    on left: 82 83, on right: 19
vref_lst (159)
    on left: 84 85, on right: 61 85
var_list (160)
    on left: 86 87, on right: 77 78 87
c_list (161)
    on left: 88 89, on right: 89 91
ivar (162)
    on left: 90 91 92 93, on right: 86 87
ch_init (163)
    on left: 94, on right: 93
vardcl (164)
    on left: 95 96 97 98, on right: 90 91 92 93
varref (165)
    on left: 99, on right: 84 85 110 114 116 120 121 130 131 132 136
    141 143 145 147 161 208 212 214 215 246 247 248 249 269
pfld (166)
    on left: 100 102, on right: 104 222 224
$@12 (167)
    on left: 101, on right: 102
cmpnd (168)
    on left: 104, on right: 99 106
$@13 (169)
    on left: 103, on right: 104
sfld (170)
    on left: 105 106, on right: 104
stmnt (171)
    on left: 107 108, on right: 64 66 127
for_pre (172)
    on left: 110, on right: 118 120
$@14 (173)
    on left: 109, on right: 110
for_post (174)
    on left: 111 112, on right: 118 120
Special (175)
    on left: 114 116 118 120 121 122 124 125 126 127 128 129, on right:
    107
$@15 (176)
    on left: 113, on right: 114
$@16 (177)
    on left: 115, on right: 116
$@17 (178)
    on left: 117, on right: 118
@18 (179)
    on left: 119, on right: 120
$@19 (180)
    on left: 123, on right: 124
Stmnt (181)
    on left: 130 131 132 133 135 136 137 138 139 141 143 145 147 148
    149 151 153 155 158 161 162, on right: 108 158 161
$@20 (182)
    on left: 134, on right: 135
$@21 (183)
    on left: 140, on right: 141
$@22 (184)
    on left: 142, on right: 143
$@23 (185)
    on left: 144, on right: 145
$@24 (186)
    on left: 146, on right: 147
$@25 (187)
    on left: 150, on right: 151
$@26 (188)
    on left: 152, on right: 153
$@27 (189)
    on left: 154, on right: 155
$@28 (190)
    on left: 156, on right: 158
$@29 (191)
    on left: 157, on right: 158
$@30 (192)
    on left: 159, on right: 161
$@31 (193)
    on left: 160, on right: 161
options (194)
    on left: 163 164, on right: 122 124 164
option (195)
    on left: 166, on right: 163 164
$@32 (196)
    on left: 165, on right: 166
OS (197)
    on left: 167 168, on right: 30 57 111 112 151 153 155 166
semi (198)
    on left: 169 170, on right: 13 168 171 172
MS (199)
    on left: 171 172, on right: 59 172
aname (200)
    on left: 173 174, on right: 207
const_expr (201)
    on left: 175 176 177 178 179 180 181 182, on right: 24 94 97 176
    177 178 179 180 181 182
expr (202)
    on left: 183 184 185 186 187 188 189 190 191 192 193 194 195 196
    197 198 199 200 201 202 203 204 205 207 208 209 210 212 214 215
    216 217 218 219 220 221 222 223 224 225, on right: 92 102 118 121
    183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198
    199 200 201 202 203 204 205 209 210 220 221 222 228 230 231 232
    233 234 235 236 237 241 242 244 245 260 266 267 268 270
$@33 (203)
    on left: 206, on right: 207
$@34 (204)
    on left: 211, on right: 212
$@35 (205)
    on left: 213, on right: 214
Opt_priority (206)
    on left: 226 227, on right: 19 27 207
full_expr (207)
    on left: 228 229, on right: 30 130 138 148 162 251
ltl_expr (208)
    on left: 230 231 232 233 234 235 236 237, on right: 225
Expr (209)
    on left: 238 239 240 241 242 243 244 245, on right: 229 239 240
    241 242 243 244 245
Probe (210)
    on left: 246 247 248 249, on right: 238
Opt_enabler (211)
    on left: 250 251 252, on right: 19
oname (212)
    on left: 253 254, on right: 255
basetype (213)
    on left: 255 256 257, on right: 258 259
typ_list (214)
    on left: 258 259, on right: 94 259
two_args (215)
    on left: 260, on right: 133
args (216)
    on left: 261 262, on right: 45 158 161 207
prargs (217)
    on left: 263 264, on right: 135
margs (218)
    on left: 265 266, on right: 116 147
arg (219)
    on left: 267 268, on right: 262 264 265 266 268
rarg (220)
    on left: 269 270 271 272, on right: 273 274 275
rargs (221)
    on left: 273 274 275 276, on right: 114 141 143 145 212 214 274
    275 276
nlst (222)
    on left: 277 278 279, on right: 79 278 279


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ARROW    shift, and go to state 9
    ACTIVE   shift, and go to state 10
    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13
    CLAIM    shift, and go to state 14
    TRACE    shift, and go to state 15
    INIT     shift, and go to state 16
    LTL      shift, and go to state 17

    PROCTYPE    reduce using rule 22 (inst)
    D_PROCTYPE  reduce using rule 22 (inst)
    TYPE        reduce using rule 68 (vis)
    UNAME       reduce using rule 68 (vis)

    program   go to state 18
    units     go to state 19
    unit      go to state 20
    proc      go to state 21
    inst      go to state 22
    init      go to state 23
    ltl       go to state 24
    claim     go to state 25
    events    go to state 26
    utype     go to state 27
    ns        go to state 28
    c_fcts    go to state 29
    cstate    go to state 30
    ccode     go to state 31
    vis       go to state 32
    one_decl  go to state 33
    semi      go to state 34


State 1

   14 unit: error .

    $default  reduce using rule 14 (unit)


State 2

   52 ccode: C_CODE .

    $default  reduce using rule 52 (ccode)


State 3

   53 ccode: C_DECL .

    $default  reduce using rule 53 (ccode)


State 4

   48 cstate: C_STATE . STRING STRING
   50       | C_STATE . STRING STRING STRING

    STRING  shift, and go to state 35


State 5

   49 cstate: C_TRACK . STRING STRING
   51       | C_TRACK . STRING STRING STRING

    STRING  shift, and go to state 36


State 6

   41 utype: TYPEDEF . NAME '{' $@7 decl_lst '}'

    NAME  shift, and go to state 37


State 7

   45 ns: INLINE . nm l_par $@8 args r_par

    NAME   shift, and go to state 38
    INAME  shift, and go to state 39

    nm  go to state 40


State 8

  169 semi: SEMI .

    $default  reduce using rule 169 (semi)


State 9

  170 semi: ARROW .

    $default  reduce using rule 170 (semi)


State 10

   23 inst: ACTIVE .
   24     | ACTIVE . '[' const_expr ']'
   25     | ACTIVE . '[' NAME ']'

    '['  shift, and go to state 41

    $default  reduce using rule 23 (inst)


State 11

   69 vis: HIDDEN .

    $default  reduce using rule 69 (vis)


State 12

   70 vis: SHOW .

    $default  reduce using rule 70 (vis)


State 13

   71 vis: ISLOCAL .

    $default  reduce using rule 71 (vis)


State 14

   33 claim: CLAIM . optname $@5 body

    NAME  shift, and go to state 42

    $default  reduce using rule 34 (optname)

    optname  go to state 43


State 15

   39 events: TRACE . $@6 body

    $default  reduce using rule 38 ($@6)

    $@6  go to state 44


State 16

   27 init: INIT . $@3 Opt_priority body

    $default  reduce using rule 26 ($@3)

    $@3  go to state 45


State 17

   29 ltl: LTL . optname2 $@4 ltl_body

    NAME  shift, and go to state 46

    $default  reduce using rule 36 (optname2)

    optname2  go to state 47


State 18

    0 $accept: program . $end

    $end  shift, and go to state 48


State 19

    1 program: units .
    3 units: units . unit

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ARROW    shift, and go to state 9
    ACTIVE   shift, and go to state 10
    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13
    CLAIM    shift, and go to state 14
    TRACE    shift, and go to state 15
    INIT     shift, and go to state 16
    LTL      shift, and go to state 17

    $end        reduce using rule 1 (program)
    PROCTYPE    reduce using rule 22 (inst)
    D_PROCTYPE  reduce using rule 22 (inst)
    TYPE        reduce using rule 68 (vis)
    UNAME       reduce using rule 68 (vis)

    unit      go to state 49
    proc      go to state 21
    inst      go to state 22
    init      go to state 23
    ltl       go to state 24
    claim     go to state 25
    events    go to state 26
    utype     go to state 27
    ns        go to state 28
    c_fcts    go to state 29
    cstate    go to state 30
    ccode     go to state 31
    vis       go to state 32
    one_decl  go to state 33
    semi      go to state 34


State 20

    2 units: unit .

    $default  reduce using rule 2 (units)


State 21

    4 unit: proc .

    $default  reduce using rule 4 (unit)


State 22

   19 proc: inst . proctype NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body

    PROCTYPE    shift, and go to state 50
    D_PROCTYPE  shift, and go to state 51

    proctype  go to state 52


State 23

    5 unit: init .

    $default  reduce using rule 5 (unit)


State 24

    7 unit: ltl .

    $default  reduce using rule 7 (unit)


State 25

    6 unit: claim .

    $default  reduce using rule 6 (unit)


State 26

    8 unit: events .

    $default  reduce using rule 8 (unit)


State 27

   10 unit: utype .

    $default  reduce using rule 10 (unit)


State 28

   12 unit: ns .

    $default  reduce using rule 12 (unit)


State 29

   11 unit: c_fcts .

    $default  reduce using rule 11 (unit)


State 30

   47 c_fcts: cstate .

    $default  reduce using rule 47 (c_fcts)


State 31

   46 c_fcts: ccode .

    $default  reduce using rule 46 (c_fcts)


State 32

   77 one_decl: vis . TYPE osubt var_list
   78         | vis . UNAME var_list
   79         | vis . TYPE asgn '{' nlst '}'

    TYPE   shift, and go to state 53
    UNAME  shift, and go to state 54


State 33

    9 unit: one_decl .

    $default  reduce using rule 9 (unit)


State 34

   13 unit: semi .

    $default  reduce using rule 13 (unit)


State 35

   48 cstate: C_STATE STRING . STRING
   50       | C_STATE STRING . STRING STRING

    STRING  shift, and go to state 55


State 36

   49 cstate: C_TRACK STRING . STRING
   51       | C_TRACK STRING . STRING STRING

    STRING  shift, and go to state 56


State 37

   41 utype: TYPEDEF NAME . '{' $@7 decl_lst '}'

    '{'  shift, and go to state 57


State 38

   42 nm: NAME .

    $default  reduce using rule 42 (nm)


State 39

   43 nm: INAME .

    $default  reduce using rule 43 (nm)


State 40

   45 ns: INLINE nm . l_par $@8 args r_par

    '('  shift, and go to state 58

    l_par  go to state 59


State 41

   24 inst: ACTIVE '[' . const_expr ']'
   25     | ACTIVE '[' . NAME ']'

    CONST  shift, and go to state 60
    NAME   shift, and go to state 61
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 64


State 42

   35 optname: NAME .

    $default  reduce using rule 35 (optname)


State 43

   33 claim: CLAIM optname . $@5 body

    $default  reduce using rule 32 ($@5)

    $@5  go to state 65


State 44

   39 events: TRACE $@6 . body

    '{'  shift, and go to state 66

    body  go to state 67


State 45

   27 init: INIT $@3 . Opt_priority body

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 226 (Opt_priority)

    Opt_priority  go to state 69


State 46

   37 optname2: NAME .

    $default  reduce using rule 37 (optname2)


State 47

   29 ltl: LTL optname2 . $@4 ltl_body

    $default  reduce using rule 28 ($@4)

    $@4  go to state 70


State 48

    0 $accept: program $end .

    $default  accept


State 49

    3 units: units unit .

    $default  reduce using rule 3 (units)


State 50

   20 proctype: PROCTYPE .

    $default  reduce using rule 20 (proctype)


State 51

   21 proctype: D_PROCTYPE .

    $default  reduce using rule 21 (proctype)


State 52

   19 proc: inst proctype . NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body

    NAME  shift, and go to state 71


State 53

   77 one_decl: vis TYPE . osubt var_list
   79         | vis TYPE . asgn '{' nlst '}'

    ASGN  shift, and go to state 72
    ':'   shift, and go to state 73

    NAME      reduce using rule 75 (osubt)
    $default  reduce using rule 72 (asgn)

    asgn   go to state 74
    osubt  go to state 75


State 54

   78 one_decl: vis UNAME . var_list

    NAME  shift, and go to state 76

    var_list  go to state 77
    ivar      go to state 78
    vardcl    go to state 79


State 55

   48 cstate: C_STATE STRING STRING .
   50       | C_STATE STRING STRING . STRING

    STRING  shift, and go to state 80

    $default  reduce using rule 48 (cstate)


State 56

   49 cstate: C_TRACK STRING STRING .
   51       | C_TRACK STRING STRING . STRING

    STRING  shift, and go to state 81

    $default  reduce using rule 49 (cstate)


State 57

   41 utype: TYPEDEF NAME '{' . $@7 decl_lst '}'

    $default  reduce using rule 40 ($@7)

    $@7  go to state 82


State 58

   15 l_par: '(' .

    $default  reduce using rule 15 (l_par)


State 59

   45 ns: INLINE nm l_par . $@8 args r_par

    $default  reduce using rule 44 ($@8)

    $@8  go to state 83


State 60

  175 const_expr: CONST .

    $default  reduce using rule 175 (const_expr)


State 61

   25 inst: ACTIVE '[' NAME . ']'

    ']'  shift, and go to state 84


State 62

  176 const_expr: '-' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 85


State 63

  177 const_expr: l_par . const_expr r_par

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 86


State 64

   24 inst: ACTIVE '[' const_expr . ']'
  178 const_expr: const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    ']'  shift, and go to state 92


State 65

   33 claim: CLAIM optname $@5 . body

    '{'  shift, and go to state 66

    body  go to state 93


State 66

   57 body: '{' . $@9 sequence OS $@10 '}'

    $default  reduce using rule 55 ($@9)

    $@9  go to state 94


State 67

   39 events: TRACE $@6 body .

    $default  reduce using rule 39 (events)


State 68

  227 Opt_priority: PRIORITY . CONST

    CONST  shift, and go to state 95


State 69

   27 init: INIT $@3 Opt_priority . body

    '{'  shift, and go to state 66

    body  go to state 96


State 70

   29 ltl: LTL optname2 $@4 . ltl_body

    error  shift, and go to state 97
    '{'    shift, and go to state 98

    ltl_body  go to state 99


State 71

   19 proc: inst proctype NAME . $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body

    $default  reduce using rule 17 ($@1)

    $@1  go to state 100


State 72

   74 asgn: ASGN .

    $default  reduce using rule 74 (asgn)


State 73

   73 asgn: ':' . NAME ASGN
   76 osubt: ':' . NAME

    NAME  shift, and go to state 101


State 74

   79 one_decl: vis TYPE asgn . '{' nlst '}'

    '{'  shift, and go to state 102


State 75

   77 one_decl: vis TYPE osubt . var_list

    NAME  shift, and go to state 76

    var_list  go to state 103
    ivar      go to state 78
    vardcl    go to state 79


State 76

   95 vardcl: NAME .
   96       | NAME . ':' CONST
   97       | NAME . '[' const_expr ']'
   98       | NAME . '[' NAME ']'

    '['  shift, and go to state 104
    ':'  shift, and go to state 105

    $default  reduce using rule 95 (vardcl)


State 77

   78 one_decl: vis UNAME var_list .

    $default  reduce using rule 78 (one_decl)


State 78

   86 var_list: ivar .
   87         | ivar . ',' var_list

    ','  shift, and go to state 106

    $default  reduce using rule 86 (var_list)


State 79

   90 ivar: vardcl .
   91     | vardcl . ASGN '{' c_list '}'
   92     | vardcl . ASGN expr
   93     | vardcl . ASGN ch_init

    ASGN  shift, and go to state 107

    $default  reduce using rule 90 (ivar)


State 80

   50 cstate: C_STATE STRING STRING STRING .

    $default  reduce using rule 50 (cstate)


State 81

   51 cstate: C_TRACK STRING STRING STRING .

    $default  reduce using rule 51 (cstate)


State 82

   41 utype: TYPEDEF NAME '{' $@7 . decl_lst '}'

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    $default  reduce using rule 68 (vis)

    vis       go to state 32
    one_decl  go to state 108
    decl_lst  go to state 109


State 83

   45 ns: INLINE nm l_par $@8 . args r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    $default  reduce using rule 261 (args)

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 132
    ltl_expr  go to state 133
    args      go to state 134
    arg       go to state 135


State 84

   25 inst: ACTIVE '[' NAME ']' .

    $default  reduce using rule 25 (inst)


State 85

  176 const_expr: '-' const_expr .
  178           | const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr

    $default  reduce using rule 176 (const_expr)


State 86

  177 const_expr: l_par const_expr . r_par
  178           | const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    ')'  shift, and go to state 136

    r_par  go to state 137


State 87

  178 const_expr: const_expr '+' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 138


State 88

  179 const_expr: const_expr '-' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 139


State 89

  180 const_expr: const_expr '*' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 140


State 90

  181 const_expr: const_expr '/' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 141


State 91

  182 const_expr: const_expr '%' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 142


State 92

   24 inst: ACTIVE '[' const_expr ']' .

    $default  reduce using rule 24 (inst)


State 93

   33 claim: CLAIM optname $@5 body .

    $default  reduce using rule 33 (claim)


State 94

   57 body: '{' $@9 . sequence OS $@10 '}'

    error        shift, and go to state 143
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 162
    NAME         shift, and go to state 163
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    sequence   go to state 168
    step       go to state 169
    vis        go to state 32
    one_decl   go to state 170
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 172
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 95

  227 Opt_priority: PRIORITY CONST .

    $default  reduce using rule 227 (Opt_priority)


State 96

   27 init: INIT $@3 Opt_priority body .

    $default  reduce using rule 27 (init)


State 97

   31 ltl_body: error .

    $default  reduce using rule 31 (ltl_body)


State 98

   30 ltl_body: '{' . full_expr OS '}'

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par      go to state 166
    cexpr      go to state 128
    varref     go to state 129
    pfld       go to state 130
    cmpnd      go to state 131
    expr       go to state 176
    full_expr  go to state 180
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 99

   29 ltl: LTL optname2 $@4 ltl_body .

    $default  reduce using rule 29 (ltl)


State 100

   19 proc: inst proctype NAME $@1 . l_par decl r_par $@2 Opt_priority Opt_enabler body

    '('  shift, and go to state 58

    l_par  go to state 181


State 101

   73 asgn: ':' NAME . ASGN
   76 osubt: ':' NAME .

    ASGN  shift, and go to state 182

    $default  reduce using rule 76 (osubt)


State 102

   79 one_decl: vis TYPE asgn '{' . nlst '}'

    NAME  shift, and go to state 183

    nlst  go to state 184


State 103

   77 one_decl: vis TYPE osubt var_list .

    $default  reduce using rule 77 (one_decl)


State 104

   97 vardcl: NAME '[' . const_expr ']'
   98       | NAME '[' . NAME ']'

    CONST  shift, and go to state 60
    NAME   shift, and go to state 185
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 186


State 105

   96 vardcl: NAME ':' . CONST

    CONST  shift, and go to state 187


State 106

   87 var_list: ivar ',' . var_list

    NAME  shift, and go to state 76

    var_list  go to state 188
    ivar      go to state 78
    vardcl    go to state 79


State 107

   91 ivar: vardcl ASGN . '{' c_list '}'
   92     | vardcl ASGN . expr
   93     | vardcl ASGN . ch_init

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '['          shift, and go to state 189
    '{'          shift, and go to state 190

    l_par     go to state 127
    cexpr     go to state 128
    ch_init   go to state 191
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 192
    ltl_expr  go to state 133


State 108

   80 decl_lst: one_decl .
   81         | one_decl . SEMI decl_lst

    SEMI  shift, and go to state 193

    $default  reduce using rule 80 (decl_lst)


State 109

   41 utype: TYPEDEF NAME '{' $@7 decl_lst . '}'

    '}'  shift, and go to state 194


State 110

   54 cexpr: C_EXPR .

    $default  reduce using rule 54 (cexpr)


State 111

  207 expr: RUN . aname $@33 l_par args r_par Opt_priority

    NAME   shift, and go to state 195
    PNAME  shift, and go to state 196

    aname  go to state 197


State 112

  208 expr: LEN . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 198


State 113

  209 expr: ENABLED . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 199


State 114

  210 expr: GET_P . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 200


State 115

  220 expr: PC_VAL . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 201


State 116

  218 expr: TIMEOUT .

    $default  reduce using rule 218 (expr)


State 117

  219 expr: NONPROGRESS .

    $default  reduce using rule 219 (expr)


State 118

  217 expr: CONST .

    $default  reduce using rule 217 (expr)


State 119

  100 pfld: NAME .
  102     | NAME . $@12 '[' expr ']'

    '['       reduce using rule 101 ($@12)
    $default  reduce using rule 100 (pfld)

    $@12  go to state 202


State 120

  221 expr: PNAME . '[' expr ']' '@' NAME
  222     | PNAME . '[' expr ']' ':' pfld
  223     | PNAME . '@' NAME
  224     | PNAME . ':' pfld

    '['  shift, and go to state 203
    ':'  shift, and go to state 204
    '@'  shift, and go to state 205


State 121

  204 expr: SND . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 206
    ltl_expr  go to state 133


State 122

  236 ltl_expr: ALWAYS . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 207
    ltl_expr  go to state 133


State 123

  237 ltl_expr: EVENTUALLY . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 208
    ltl_expr  go to state 133


State 124

  235 ltl_expr: NEXT . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 209
    ltl_expr  go to state 133


State 125

  203 expr: '-' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 210
    ltl_expr  go to state 133


State 126

  202 expr: '~' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 211
    ltl_expr  go to state 133


State 127

  183 expr: l_par . expr r_par
  205     | l_par . expr ARROW expr ':' expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 212
    ltl_expr  go to state 133


State 128

  216 expr: cexpr .

    $default  reduce using rule 216 (expr)


State 129

  212 expr: varref . RCV $@34 '[' rargs ']'
  214     | varref . R_RCV $@35 '[' rargs ']'
  215     | varref .

    RCV    shift, and go to state 213
    R_RCV  shift, and go to state 214

    $default  reduce using rule 215 (expr)


State 130

  104 cmpnd: pfld . $@13 sfld

    $default  reduce using rule 103 ($@13)

    $@13  go to state 215


State 131

   99 varref: cmpnd .

    $default  reduce using rule 99 (varref)


State 132

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  267 arg: expr .
  268    | expr . ',' arg

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ','         shift, and go to state 239

    $default  reduce using rule 267 (arg)


State 133

  225 expr: ltl_expr .

    $default  reduce using rule 225 (expr)


State 134

   45 ns: INLINE nm l_par $@8 args . r_par

    ')'  shift, and go to state 136

    r_par  go to state 240


State 135

  262 args: arg .

    $default  reduce using rule 262 (args)


State 136

   16 r_par: ')' .

    $default  reduce using rule 16 (r_par)


State 137

  177 const_expr: l_par const_expr r_par .

    $default  reduce using rule 177 (const_expr)


State 138

  178 const_expr: const_expr . '+' const_expr
  178           | const_expr '+' const_expr .
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 178 (const_expr)


State 139

  178 const_expr: const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  179           | const_expr '-' const_expr .
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 179 (const_expr)


State 140

  178 const_expr: const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  180           | const_expr '*' const_expr .
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr

    $default  reduce using rule 180 (const_expr)


State 141

  178 const_expr: const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  181           | const_expr '/' const_expr .
  182           | const_expr . '%' const_expr

    $default  reduce using rule 181 (const_expr)


State 142

  178 const_expr: const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr
  182           | const_expr '%' const_expr .

    $default  reduce using rule 182 (const_expr)


State 143

   67 step: error .
  129 Special: error .

    SEMI      reduce using rule 67 (step)
    SEMI      [reduce using rule 129 (Special)]
    ARROW     reduce using rule 67 (step)
    ARROW     [reduce using rule 129 (Special)]
    FI        reduce using rule 67 (step)
    FI        [reduce using rule 129 (Special)]
    OD        reduce using rule 67 (step)
    OD        [reduce using rule 129 (Special)]
    SEP       reduce using rule 67 (step)
    SEP       [reduce using rule 129 (Special)]
    UNLESS    reduce using rule 129 (Special)
    '}'       reduce using rule 67 (step)
    '}'       [reduce using rule 129 (Special)]
    $default  reduce using rule 67 (step)


State 144

  138 Stmnt: ASSERT . full_expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par      go to state 166
    cexpr      go to state 128
    varref     go to state 129
    pfld       go to state 130
    cmpnd      go to state 131
    expr       go to state 176
    full_expr  go to state 241
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 145

  135 Stmnt: PRINT . l_par STRING $@20 prargs r_par

    '('  shift, and go to state 58

    l_par  go to state 242


State 146

  136 Stmnt: PRINTM . l_par varref r_par
  137      | PRINTM . l_par CONST r_par

    '('  shift, and go to state 58

    l_par  go to state 243


State 147

  133 Stmnt: SET_P . l_par two_args r_par

    '('  shift, and go to state 58

    l_par  go to state 244


State 148

  162 Stmnt: RETURN . full_expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par      go to state 166
    cexpr      go to state 128
    varref     go to state 129
    pfld       go to state 130
    cmpnd      go to state 131
    expr       go to state 176
    full_expr  go to state 245
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 149

  126 Special: GOTO . NAME

    NAME  shift, and go to state 246


State 150

  125 Special: BREAK .

    $default  reduce using rule 125 (Special)


State 151

  149 Stmnt: ELSE .

    $default  reduce using rule 149 (Stmnt)


State 152

  122 Special: IF . options FI

    SEP  shift, and go to state 247

    options  go to state 248
    option   go to state 249


State 153

  124 Special: DO . $@19 options OD

    $default  reduce using rule 123 ($@19)

    $@19  go to state 250


State 154

  110 for_pre: FOR . l_par $@14 varref

    '('  shift, and go to state 58

    l_par  go to state 251


State 155

  121 Special: SELECT . l_par varref ':' expr DOTDOT expr r_par

    '('  shift, and go to state 58

    l_par  go to state 252


State 156

  151 Stmnt: ATOMIC . '{' $@25 sequence OS '}'

    '{'  shift, and go to state 253


State 157

  153 Stmnt: D_STEP . '{' $@26 sequence OS '}'

    '{'  shift, and go to state 254


State 158

  246 Probe: FULL . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 255


State 159

  248 Probe: EMPTY . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 256


State 160

  247 Probe: NFULL . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 257


State 161

  249 Probe: NEMPTY . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 258


State 162

   61 step: XU . vref_lst

    NAME  shift, and go to state 119

    vref_lst  go to state 259
    varref    go to state 260
    pfld      go to state 130
    cmpnd     go to state 131


State 163

   62 step: NAME . ':' one_decl
   63     | NAME . ':' XU
  100 pfld: NAME .
  102     | NAME . $@12 '[' expr ']'
  127 Special: NAME . ':' stmnt
  128        | NAME . ':'

    ':'  shift, and go to state 261

    '['       reduce using rule 101 ($@12)
    $default  reduce using rule 100 (pfld)

    $@12  go to state 202


State 164

  158 Stmnt: INAME . $@28 l_par args r_par $@29 Stmnt

    $default  reduce using rule 156 ($@28)

    $@28  go to state 262


State 165

  155 Stmnt: '{' . $@27 sequence OS '}'

    $default  reduce using rule 154 ($@27)

    $@27  go to state 263


State 166

  183 expr: l_par . expr r_par
  205     | l_par . expr ARROW expr ':' expr r_par
  239 Expr: l_par . Expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 166
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 264
    ltl_expr  go to state 133
    Expr      go to state 265
    Probe     go to state 179


State 167

  139 Stmnt: ccode .

    $default  reduce using rule 139 (Stmnt)


State 168

   57 body: '{' $@9 sequence . OS $@10 '}'
   59 sequence: sequence . MS step

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 167 (OS)

    OS    go to state 266
    semi  go to state 267
    MS    go to state 268


State 169

   58 sequence: step .

    $default  reduce using rule 58 (sequence)


State 170

   60 step: one_decl .

    $default  reduce using rule 60 (step)


State 171

  114 Special: varref . RCV $@15 rargs
  116        | varref . SND $@16 margs
  130 Stmnt: varref . ASGN full_expr
  131      | varref . INCR
  132      | varref . DECR
  141      | varref . R_RCV $@21 rargs
  143      | varref . RCV $@22 LT rargs GT
  145      | varref . R_RCV $@23 LT rargs GT
  147      | varref . O_SND $@24 margs
  161      | varref . ASGN INAME $@30 l_par args r_par $@31 Stmnt
  212 expr: varref . RCV $@34 '[' rargs ']'
  214     | varref . R_RCV $@35 '[' rargs ']'
  215     | varref .

    ASGN   shift, and go to state 269
    SND    shift, and go to state 270
    O_SND  shift, and go to state 271
    RCV    shift, and go to state 272
    R_RCV  shift, and go to state 273
    INCR   shift, and go to state 274
    DECR   shift, and go to state 275

    $default  reduce using rule 215 (expr)


State 172

   64 step: stmnt .
   66     | stmnt . UNLESS $@11 stmnt

    UNLESS  shift, and go to state 276

    $default  reduce using rule 64 (step)


State 173

  118 Special: for_pre . ':' expr DOTDOT expr r_par $@17 for_post
  120        | for_pre . IN varref r_par @18 for_post

    IN   shift, and go to state 277
    ':'  shift, and go to state 278


State 174

  107 stmnt: Special .

    $default  reduce using rule 107 (stmnt)


State 175

  108 stmnt: Stmnt .

    $default  reduce using rule 108 (stmnt)


State 176

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  228 full_expr: expr .
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  242 Expr: expr . AND Expr
  245     | expr . OR Expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 279
    AND         shift, and go to state 280
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 228 (full_expr)


State 177

  148 Stmnt: full_expr .

    $default  reduce using rule 148 (Stmnt)


State 178

  229 full_expr: Expr .
  240 Expr: Expr . AND Expr
  241     | Expr . AND expr
  243     | Expr . OR Expr
  244     | Expr . OR expr

    OR   shift, and go to state 281
    AND  shift, and go to state 282

    $default  reduce using rule 229 (full_expr)


State 179

  238 Expr: Probe .

    $default  reduce using rule 238 (Expr)


State 180

   30 ltl_body: '{' full_expr . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 167 (OS)

    OS    go to state 283
    semi  go to state 284


State 181

   19 proc: inst proctype NAME $@1 l_par . decl r_par $@2 Opt_priority Opt_enabler body

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    ')'       reduce using rule 82 (decl)
    $default  reduce using rule 68 (vis)

    vis       go to state 32
    one_decl  go to state 108
    decl_lst  go to state 285
    decl      go to state 286


State 182

   73 asgn: ':' NAME ASGN .

    $default  reduce using rule 73 (asgn)


State 183

  277 nlst: NAME .

    $default  reduce using rule 277 (nlst)


State 184

   79 one_decl: vis TYPE asgn '{' nlst . '}'
  278 nlst: nlst . NAME
  279     | nlst . ','

    NAME  shift, and go to state 287
    '}'   shift, and go to state 288
    ','   shift, and go to state 289


State 185

   98 vardcl: NAME '[' NAME . ']'

    ']'  shift, and go to state 290


State 186

   97 vardcl: NAME '[' const_expr . ']'
  178 const_expr: const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    ']'  shift, and go to state 291


State 187

   96 vardcl: NAME ':' CONST .

    $default  reduce using rule 96 (vardcl)


State 188

   87 var_list: ivar ',' var_list .

    $default  reduce using rule 87 (var_list)


State 189

   94 ch_init: '[' . const_expr ']' OF '{' typ_list '}'

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 292


State 190

   91 ivar: vardcl ASGN '{' . c_list '}'

    CONST  shift, and go to state 293

    c_list  go to state 294


State 191

   93 ivar: vardcl ASGN ch_init .

    $default  reduce using rule 93 (ivar)


State 192

   92 ivar: vardcl ASGN expr .
  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 92 (ivar)


State 193

   81 decl_lst: one_decl SEMI . decl_lst

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    $default  reduce using rule 68 (vis)

    vis       go to state 32
    one_decl  go to state 108
    decl_lst  go to state 295


State 194

   41 utype: TYPEDEF NAME '{' $@7 decl_lst '}' .

    $default  reduce using rule 41 (utype)


State 195

  173 aname: NAME .

    $default  reduce using rule 173 (aname)


State 196

  174 aname: PNAME .

    $default  reduce using rule 174 (aname)


State 197

  207 expr: RUN aname . $@33 l_par args r_par Opt_priority

    $default  reduce using rule 206 ($@33)

    $@33  go to state 296


State 198

  208 expr: LEN l_par . varref r_par

    NAME  shift, and go to state 119

    varref  go to state 297
    pfld    go to state 130
    cmpnd   go to state 131


State 199

  209 expr: ENABLED l_par . expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 298
    ltl_expr  go to state 133


State 200

  210 expr: GET_P l_par . expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 299
    ltl_expr  go to state 133


State 201

  220 expr: PC_VAL l_par . expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 300
    ltl_expr  go to state 133


State 202

  102 pfld: NAME $@12 . '[' expr ']'

    '['  shift, and go to state 301


State 203

  221 expr: PNAME '[' . expr ']' '@' NAME
  222     | PNAME '[' . expr ']' ':' pfld

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 302
    ltl_expr  go to state 133


State 204

  224 expr: PNAME ':' . pfld

    NAME  shift, and go to state 119

    pfld  go to state 303


State 205

  223 expr: PNAME '@' . NAME

    NAME  shift, and go to state 304


State 206

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  204     | SND expr .
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    $default  reduce using rule 204 (expr)


State 207

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  236         | ALWAYS expr .

    $default  reduce using rule 236 (ltl_expr)


State 208

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  237         | EVENTUALLY expr .

    $default  reduce using rule 237 (ltl_expr)


State 209

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  235         | NEXT expr .

    $default  reduce using rule 235 (ltl_expr)


State 210

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  203     | '-' expr .
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    $default  reduce using rule 203 (expr)


State 211

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  202     | '~' expr .
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    $default  reduce using rule 202 (expr)


State 212

  183 expr: l_par expr . r_par
  184     | expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  205     | l_par expr . ARROW expr ':' expr r_par
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    ARROW       shift, and go to state 305
    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 306


State 213

  212 expr: varref RCV . $@34 '[' rargs ']'

    $default  reduce using rule 211 ($@34)

    $@34  go to state 307


State 214

  214 expr: varref R_RCV . $@35 '[' rargs ']'

    $default  reduce using rule 213 ($@35)

    $@35  go to state 308


State 215

  104 cmpnd: pfld $@13 . sfld

    '.'  shift, and go to state 309

    $default  reduce using rule 105 (sfld)

    sfld  go to state 310


State 216

  233 ltl_expr: expr IMPLIES . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 311
    ltl_expr  go to state 133


State 217

  234 ltl_expr: expr EQUIV . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 312
    ltl_expr  go to state 133


State 218

  199 expr: expr OR . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 313
    ltl_expr  go to state 133


State 219

  198 expr: expr AND . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 314
    ltl_expr  go to state 133


State 220

  230 ltl_expr: expr UNTIL . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 315
    ltl_expr  go to state 133


State 221

  232 ltl_expr: expr WEAK_UNTIL . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 316
    ltl_expr  go to state 133


State 222

  231 ltl_expr: expr RELEASE . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 317
    ltl_expr  go to state 133


State 223

  191 expr: expr '|' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 318
    ltl_expr  go to state 133


State 224

  190 expr: expr '^' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 319
    ltl_expr  go to state 133


State 225

  189 expr: expr '&' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 320
    ltl_expr  go to state 133


State 226

  196 expr: expr EQ . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 321
    ltl_expr  go to state 133


State 227

  197 expr: expr NE . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 322
    ltl_expr  go to state 133


State 228

  192 expr: expr GT . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 323
    ltl_expr  go to state 133


State 229

  193 expr: expr LT . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 324
    ltl_expr  go to state 133


State 230

  194 expr: expr GE . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 325
    ltl_expr  go to state 133


State 231

  195 expr: expr LE . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 326
    ltl_expr  go to state 133


State 232

  200 expr: expr LSHIFT . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 327
    ltl_expr  go to state 133


State 233

  201 expr: expr RSHIFT . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 328
    ltl_expr  go to state 133


State 234

  184 expr: expr '+' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 329
    ltl_expr  go to state 133


State 235

  185 expr: expr '-' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 330
    ltl_expr  go to state 133


State 236

  186 expr: expr '*' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 331
    ltl_expr  go to state 133


State 237

  187 expr: expr '/' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 332
    ltl_expr  go to state 133


State 238

  188 expr: expr '%' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 333
    ltl_expr  go to state 133


State 239

  268 arg: expr ',' . arg

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 132
    ltl_expr  go to state 133
    arg       go to state 334


State 240

   45 ns: INLINE nm l_par $@8 args r_par .

    $default  reduce using rule 45 (ns)


State 241

  138 Stmnt: ASSERT full_expr .

    $default  reduce using rule 138 (Stmnt)


State 242

  135 Stmnt: PRINT l_par . STRING $@20 prargs r_par

    STRING  shift, and go to state 335


State 243

  136 Stmnt: PRINTM l_par . varref r_par
  137      | PRINTM l_par . CONST r_par

    CONST  shift, and go to state 336
    NAME   shift, and go to state 119

    varref  go to state 337
    pfld    go to state 130
    cmpnd   go to state 131


State 244

  133 Stmnt: SET_P l_par . two_args r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 338
    ltl_expr  go to state 133
    two_args  go to state 339


State 245

  162 Stmnt: RETURN full_expr .

    $default  reduce using rule 162 (Stmnt)


State 246

  126 Special: GOTO NAME .

    $default  reduce using rule 126 (Special)


State 247

  166 option: SEP . $@32 sequence OS

    $default  reduce using rule 165 ($@32)

    $@32  go to state 340


State 248

  122 Special: IF options . FI

    FI  shift, and go to state 341


State 249

  163 options: option .
  164        | option . options

    SEP  shift, and go to state 247

    $default  reduce using rule 163 (options)

    options  go to state 342
    option   go to state 249


State 250

  124 Special: DO $@19 . options OD

    SEP  shift, and go to state 247

    options  go to state 343
    option   go to state 249


State 251

  110 for_pre: FOR l_par . $@14 varref

    $default  reduce using rule 109 ($@14)

    $@14  go to state 344


State 252

  121 Special: SELECT l_par . varref ':' expr DOTDOT expr r_par

    NAME  shift, and go to state 119

    varref  go to state 345
    pfld    go to state 130
    cmpnd   go to state 131


State 253

  151 Stmnt: ATOMIC '{' . $@25 sequence OS '}'

    $default  reduce using rule 150 ($@25)

    $@25  go to state 346


State 254

  153 Stmnt: D_STEP '{' . $@26 sequence OS '}'

    $default  reduce using rule 152 ($@26)

    $@26  go to state 347


State 255

  246 Probe: FULL l_par . varref r_par

    NAME  shift, and go to state 119

    varref  go to state 348
    pfld    go to state 130
    cmpnd   go to state 131


State 256

  248 Probe: EMPTY l_par . varref r_par

    NAME  shift, and go to state 119

    varref  go to state 349
    pfld    go to state 130
    cmpnd   go to state 131


State 257

  247 Probe: NFULL l_par . varref r_par

    NAME  shift, and go to state 119

    varref  go to state 350
    pfld    go to state 130
    cmpnd   go to state 131


State 258

  249 Probe: NEMPTY l_par . varref r_par

    NAME  shift, and go to state 119

    varref  go to state 351
    pfld    go to state 130
    cmpnd   go to state 131


State 259

   61 step: XU vref_lst .

    $default  reduce using rule 61 (step)


State 260

   84 vref_lst: varref .
   85         | varref . ',' vref_lst

    ','  shift, and go to state 352

    $default  reduce using rule 84 (vref_lst)


State 261

   62 step: NAME ':' . one_decl
   63     | NAME ':' . XU
  127 Special: NAME ':' . stmnt
  128        | NAME ':' .

    error        shift, and go to state 353
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 354
    NAME         shift, and go to state 355
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    SEMI    reduce using rule 128 (Special)
    ARROW   reduce using rule 128 (Special)
    FI      reduce using rule 128 (Special)
    OD      reduce using rule 128 (Special)
    SEP     reduce using rule 128 (Special)
    UNLESS  reduce using rule 128 (Special)
    TYPE    reduce using rule 68 (vis)
    UNAME   reduce using rule 68 (vis)
    '}'     reduce using rule 128 (Special)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    vis        go to state 32
    one_decl   go to state 356
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 357
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 262

  158 Stmnt: INAME $@28 . l_par args r_par $@29 Stmnt

    '('  shift, and go to state 58

    l_par  go to state 358


State 263

  155 Stmnt: '{' $@27 . sequence OS '}'

    error        shift, and go to state 143
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 162
    NAME         shift, and go to state 163
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    sequence   go to state 359
    step       go to state 169
    vis        go to state 32
    one_decl   go to state 170
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 172
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 264

  183 expr: l_par expr . r_par
  184     | expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  205     | l_par expr . ARROW expr ':' expr r_par
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  242 Expr: expr . AND Expr
  245     | expr . OR Expr

    ARROW       shift, and go to state 305
    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 279
    AND         shift, and go to state 280
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 306


State 265

  239 Expr: l_par Expr . r_par
  240     | Expr . AND Expr
  241     | Expr . AND expr
  243     | Expr . OR Expr
  244     | Expr . OR expr

    OR   shift, and go to state 281
    AND  shift, and go to state 282
    ')'  shift, and go to state 136

    r_par  go to state 360


State 266

   57 body: '{' $@9 sequence OS . $@10 '}'

    $default  reduce using rule 56 ($@10)

    $@10  go to state 361


State 267

  168 OS: semi .
  171 MS: semi .

    FI        reduce using rule 168 (OS)
    OD        reduce using rule 168 (OS)
    SEP       reduce using rule 168 (OS)
    '}'       reduce using rule 168 (OS)
    $default  reduce using rule 171 (MS)


State 268

   59 sequence: sequence MS . step
  172 MS: MS . semi

    error        shift, and go to state 143
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    SEMI         shift, and go to state 8
    ARROW        shift, and go to state 9
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 162
    NAME         shift, and go to state 163
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    step       go to state 362
    vis        go to state 32
    one_decl   go to state 170
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 172
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    semi       go to state 363
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 269

  130 Stmnt: varref ASGN . full_expr
  161      | varref ASGN . INAME $@30 l_par args r_par $@31 Stmnt

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 364
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par      go to state 166
    cexpr      go to state 128
    varref     go to state 129
    pfld       go to state 130
    cmpnd      go to state 131
    expr       go to state 176
    full_expr  go to state 365
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 270

  116 Special: varref SND . $@16 margs

    $default  reduce using rule 115 ($@16)

    $@16  go to state 366


State 271

  147 Stmnt: varref O_SND . $@24 margs

    $default  reduce using rule 146 ($@24)

    $@24  go to state 367


State 272

  114 Special: varref RCV . $@15 rargs
  143 Stmnt: varref RCV . $@22 LT rargs GT
  212 expr: varref RCV . $@34 '[' rargs ']'

    LT        reduce using rule 142 ($@22)
    '['       reduce using rule 211 ($@34)
    $default  reduce using rule 113 ($@15)

    $@15  go to state 368
    $@22  go to state 369
    $@34  go to state 307


State 273

  141 Stmnt: varref R_RCV . $@21 rargs
  145      | varref R_RCV . $@23 LT rargs GT
  214 expr: varref R_RCV . $@35 '[' rargs ']'

    LT        reduce using rule 144 ($@23)
    '['       reduce using rule 213 ($@35)
    $default  reduce using rule 140 ($@21)

    $@21  go to state 370
    $@23  go to state 371
    $@35  go to state 308


State 274

  131 Stmnt: varref INCR .

    $default  reduce using rule 131 (Stmnt)


State 275

  132 Stmnt: varref DECR .

    $default  reduce using rule 132 (Stmnt)


State 276

   66 step: stmnt UNLESS . $@11 stmnt

    $default  reduce using rule 65 ($@11)

    $@11  go to state 372


State 277

  120 Special: for_pre IN . varref r_par @18 for_post

    NAME  shift, and go to state 119

    varref  go to state 373
    pfld    go to state 130
    cmpnd   go to state 131


State 278

  118 Special: for_pre ':' . expr DOTDOT expr r_par $@17 for_post

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 374
    ltl_expr  go to state 133


State 279

  199 expr: expr OR . expr
  245 Expr: expr OR . Expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 166
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 375
    ltl_expr  go to state 133
    Expr      go to state 376
    Probe     go to state 179


State 280

  198 expr: expr AND . expr
  242 Expr: expr AND . Expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 166
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 377
    ltl_expr  go to state 133
    Expr      go to state 378
    Probe     go to state 179


State 281

  243 Expr: Expr OR . Expr
  244     | Expr OR . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 166
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 379
    ltl_expr  go to state 133
    Expr      go to state 380
    Probe     go to state 179


State 282

  240 Expr: Expr AND . Expr
  241     | Expr AND . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 166
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 381
    ltl_expr  go to state 133
    Expr      go to state 382
    Probe     go to state 179


State 283

   30 ltl_body: '{' full_expr OS . '}'

    '}'  shift, and go to state 383


State 284

  168 OS: semi .

    $default  reduce using rule 168 (OS)


State 285

   83 decl: decl_lst .

    $default  reduce using rule 83 (decl)


State 286

   19 proc: inst proctype NAME $@1 l_par decl . r_par $@2 Opt_priority Opt_enabler body

    ')'  shift, and go to state 136

    r_par  go to state 384


State 287

  278 nlst: nlst NAME .

    $default  reduce using rule 278 (nlst)


State 288

   79 one_decl: vis TYPE asgn '{' nlst '}' .

    $default  reduce using rule 79 (one_decl)


State 289

  279 nlst: nlst ',' .

    $default  reduce using rule 279 (nlst)


State 290

   98 vardcl: NAME '[' NAME ']' .

    $default  reduce using rule 98 (vardcl)


State 291

   97 vardcl: NAME '[' const_expr ']' .

    $default  reduce using rule 97 (vardcl)


State 292

   94 ch_init: '[' const_expr . ']' OF '{' typ_list '}'
  178 const_expr: const_expr . '+' const_expr
  179           | const_expr . '-' const_expr
  180           | const_expr . '*' const_expr
  181           | const_expr . '/' const_expr
  182           | const_expr . '%' const_expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91
    ']'  shift, and go to state 385


State 293

   88 c_list: CONST .
   89       | CONST . ',' c_list

    ','  shift, and go to state 386

    $default  reduce using rule 88 (c_list)


State 294

   91 ivar: vardcl ASGN '{' c_list . '}'

    '}'  shift, and go to state 387


State 295

   81 decl_lst: one_decl SEMI decl_lst .

    $default  reduce using rule 81 (decl_lst)


State 296

  207 expr: RUN aname $@33 . l_par args r_par Opt_priority

    '('  shift, and go to state 58

    l_par  go to state 388


State 297

  208 expr: LEN l_par varref . r_par

    ')'  shift, and go to state 136

    r_par  go to state 389


State 298

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  209     | ENABLED l_par expr . r_par
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 390


State 299

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  210     | GET_P l_par expr . r_par
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 391


State 300

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  220     | PC_VAL l_par expr . r_par
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 392


State 301

  102 pfld: NAME $@12 '[' . expr ']'

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 393
    ltl_expr  go to state 133


State 302

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  221     | PNAME '[' expr . ']' '@' NAME
  222     | PNAME '[' expr . ']' ':' pfld
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ']'         shift, and go to state 394


State 303

  224 expr: PNAME ':' pfld .

    $default  reduce using rule 224 (expr)


State 304

  223 expr: PNAME '@' NAME .

    $default  reduce using rule 223 (expr)


State 305

  205 expr: l_par expr ARROW . expr ':' expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 395
    ltl_expr  go to state 133


State 306

  183 expr: l_par expr r_par .

    $default  reduce using rule 183 (expr)


State 307

  212 expr: varref RCV $@34 . '[' rargs ']'

    '['  shift, and go to state 396


State 308

  214 expr: varref R_RCV $@35 . '[' rargs ']'

    '['  shift, and go to state 397


State 309

  106 sfld: '.' . cmpnd

    NAME  shift, and go to state 119

    pfld   go to state 130
    cmpnd  go to state 398


State 310

  104 cmpnd: pfld $@13 sfld .

    $default  reduce using rule 104 (cmpnd)


State 311

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  233         | expr IMPLIES expr .
  234         | expr . EQUIV expr

    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 233 (ltl_expr)


State 312

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  234         | expr EQUIV expr .

    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 234 (ltl_expr)


State 313

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  199     | expr OR expr .
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 199 (expr)


State 314

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  198     | expr AND expr .
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 198 (expr)


State 315

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  230         | expr UNTIL expr .
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '|'     shift, and go to state 223
    '^'     shift, and go to state 224
    '&'     shift, and go to state 225
    EQ      shift, and go to state 226
    NE      shift, and go to state 227
    GT      shift, and go to state 228
    LT      shift, and go to state 229
    GE      shift, and go to state 230
    LE      shift, and go to state 231
    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 230 (ltl_expr)


State 316

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  232         | expr WEAK_UNTIL expr .
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '|'     shift, and go to state 223
    '^'     shift, and go to state 224
    '&'     shift, and go to state 225
    EQ      shift, and go to state 226
    NE      shift, and go to state 227
    GT      shift, and go to state 228
    LT      shift, and go to state 229
    GE      shift, and go to state 230
    LE      shift, and go to state 231
    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 232 (ltl_expr)


State 317

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  231         | expr RELEASE expr .
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '|'     shift, and go to state 223
    '^'     shift, and go to state 224
    '&'     shift, and go to state 225
    EQ      shift, and go to state 226
    NE      shift, and go to state 227
    GT      shift, and go to state 228
    LT      shift, and go to state 229
    GE      shift, and go to state 230
    LE      shift, and go to state 231
    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 231 (ltl_expr)


State 318

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  191     | expr '|' expr .
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '^'     shift, and go to state 224
    '&'     shift, and go to state 225
    EQ      shift, and go to state 226
    NE      shift, and go to state 227
    GT      shift, and go to state 228
    LT      shift, and go to state 229
    GE      shift, and go to state 230
    LE      shift, and go to state 231
    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 191 (expr)


State 319

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  190     | expr '^' expr .
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '&'     shift, and go to state 225
    EQ      shift, and go to state 226
    NE      shift, and go to state 227
    GT      shift, and go to state 228
    LT      shift, and go to state 229
    GE      shift, and go to state 230
    LE      shift, and go to state 231
    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 190 (expr)


State 320

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  189     | expr '&' expr .
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    EQ      shift, and go to state 226
    NE      shift, and go to state 227
    GT      shift, and go to state 228
    LT      shift, and go to state 229
    GE      shift, and go to state 230
    LE      shift, and go to state 231
    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 189 (expr)


State 321

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  196     | expr EQ expr .
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    GT      shift, and go to state 228
    LT      shift, and go to state 229
    GE      shift, and go to state 230
    LE      shift, and go to state 231
    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 196 (expr)


State 322

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  197     | expr NE expr .
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    GT      shift, and go to state 228
    LT      shift, and go to state 229
    GE      shift, and go to state 230
    LE      shift, and go to state 231
    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 197 (expr)


State 323

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  192     | expr GT expr .
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 192 (expr)


State 324

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  193     | expr LT expr .
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 193 (expr)


State 325

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  194     | expr GE expr .
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 194 (expr)


State 326

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  195     | expr LE expr .
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    LSHIFT  shift, and go to state 232
    RSHIFT  shift, and go to state 233
    '+'     shift, and go to state 234
    '-'     shift, and go to state 235
    '*'     shift, and go to state 236
    '/'     shift, and go to state 237
    '%'     shift, and go to state 238

    $default  reduce using rule 195 (expr)


State 327

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  200     | expr LSHIFT expr .
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '+'  shift, and go to state 234
    '-'  shift, and go to state 235
    '*'  shift, and go to state 236
    '/'  shift, and go to state 237
    '%'  shift, and go to state 238

    $default  reduce using rule 200 (expr)


State 328

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  201     | expr RSHIFT expr .
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '+'  shift, and go to state 234
    '-'  shift, and go to state 235
    '*'  shift, and go to state 236
    '/'  shift, and go to state 237
    '%'  shift, and go to state 238

    $default  reduce using rule 201 (expr)


State 329

  184 expr: expr . '+' expr
  184     | expr '+' expr .
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '*'  shift, and go to state 236
    '/'  shift, and go to state 237
    '%'  shift, and go to state 238

    $default  reduce using rule 184 (expr)


State 330

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  185     | expr '-' expr .
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    '*'  shift, and go to state 236
    '/'  shift, and go to state 237
    '%'  shift, and go to state 238

    $default  reduce using rule 185 (expr)


State 331

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  186     | expr '*' expr .
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    $default  reduce using rule 186 (expr)


State 332

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  187     | expr '/' expr .
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    $default  reduce using rule 187 (expr)


State 333

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  188     | expr '%' expr .
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    $default  reduce using rule 188 (expr)


State 334

  268 arg: expr ',' arg .

    $default  reduce using rule 268 (arg)


State 335

  135 Stmnt: PRINT l_par STRING . $@20 prargs r_par

    $default  reduce using rule 134 ($@20)

    $@20  go to state 399


State 336

  137 Stmnt: PRINTM l_par CONST . r_par

    ')'  shift, and go to state 136

    r_par  go to state 400


State 337

  136 Stmnt: PRINTM l_par varref . r_par

    ')'  shift, and go to state 136

    r_par  go to state 401


State 338

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  260 two_args: expr . ',' expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ','         shift, and go to state 402


State 339

  133 Stmnt: SET_P l_par two_args . r_par

    ')'  shift, and go to state 136

    r_par  go to state 403


State 340

  166 option: SEP $@32 . sequence OS

    error        shift, and go to state 143
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 162
    NAME         shift, and go to state 163
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    sequence   go to state 404
    step       go to state 169
    vis        go to state 32
    one_decl   go to state 170
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 172
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 341

  122 Special: IF options FI .

    $default  reduce using rule 122 (Special)


State 342

  164 options: option options .

    $default  reduce using rule 164 (options)


State 343

  124 Special: DO $@19 options . OD

    OD  shift, and go to state 405


State 344

  110 for_pre: FOR l_par $@14 . varref

    NAME  shift, and go to state 119

    varref  go to state 406
    pfld    go to state 130
    cmpnd   go to state 131


State 345

  121 Special: SELECT l_par varref . ':' expr DOTDOT expr r_par

    ':'  shift, and go to state 407


State 346

  151 Stmnt: ATOMIC '{' $@25 . sequence OS '}'

    error        shift, and go to state 143
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 162
    NAME         shift, and go to state 163
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    sequence   go to state 408
    step       go to state 169
    vis        go to state 32
    one_decl   go to state 170
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 172
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 347

  153 Stmnt: D_STEP '{' $@26 . sequence OS '}'

    error        shift, and go to state 143
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 162
    NAME         shift, and go to state 163
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    sequence   go to state 409
    step       go to state 169
    vis        go to state 32
    one_decl   go to state 170
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 172
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 348

  246 Probe: FULL l_par varref . r_par

    ')'  shift, and go to state 136

    r_par  go to state 410


State 349

  248 Probe: EMPTY l_par varref . r_par

    ')'  shift, and go to state 136

    r_par  go to state 411


State 350

  247 Probe: NFULL l_par varref . r_par

    ')'  shift, and go to state 136

    r_par  go to state 412


State 351

  249 Probe: NEMPTY l_par varref . r_par

    ')'  shift, and go to state 136

    r_par  go to state 413


State 352

   85 vref_lst: varref ',' . vref_lst

    NAME  shift, and go to state 119

    vref_lst  go to state 414
    varref    go to state 260
    pfld      go to state 130
    cmpnd     go to state 131


State 353

  129 Special: error .

    $default  reduce using rule 129 (Special)


State 354

   63 step: NAME ':' XU .

    $default  reduce using rule 63 (step)


State 355

  100 pfld: NAME .
  102     | NAME . $@12 '[' expr ']'
  127 Special: NAME . ':' stmnt
  128        | NAME . ':'

    ':'  shift, and go to state 415

    '['       reduce using rule 101 ($@12)
    $default  reduce using rule 100 (pfld)

    $@12  go to state 202


State 356

   62 step: NAME ':' one_decl .

    $default  reduce using rule 62 (step)


State 357

  127 Special: NAME ':' stmnt .

    $default  reduce using rule 127 (Special)


State 358

  158 Stmnt: INAME $@28 l_par . args r_par $@29 Stmnt

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    $default  reduce using rule 261 (args)

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 132
    ltl_expr  go to state 133
    args      go to state 416
    arg       go to state 135


State 359

   59 sequence: sequence . MS step
  155 Stmnt: '{' $@27 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 167 (OS)

    OS    go to state 417
    semi  go to state 267
    MS    go to state 268


State 360

  239 Expr: l_par Expr r_par .

    $default  reduce using rule 239 (Expr)


State 361

   57 body: '{' $@9 sequence OS $@10 . '}'

    '}'  shift, and go to state 418


State 362

   59 sequence: sequence MS step .

    $default  reduce using rule 59 (sequence)


State 363

  172 MS: MS semi .

    $default  reduce using rule 172 (MS)


State 364

  161 Stmnt: varref ASGN INAME . $@30 l_par args r_par $@31 Stmnt

    $default  reduce using rule 159 ($@30)

    $@30  go to state 419


State 365

  130 Stmnt: varref ASGN full_expr .

    $default  reduce using rule 130 (Stmnt)


State 366

  116 Special: varref SND $@16 . margs

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 420
    ltl_expr  go to state 133
    margs     go to state 421
    arg       go to state 422


State 367

  147 Stmnt: varref O_SND $@24 . margs

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 420
    ltl_expr  go to state 133
    margs     go to state 423
    arg       go to state 422


State 368

  114 Special: varref RCV $@15 . rargs

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 430


State 369

  143 Stmnt: varref RCV $@22 . LT rargs GT

    LT  shift, and go to state 431


State 370

  141 Stmnt: varref R_RCV $@21 . rargs

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 432


State 371

  145 Stmnt: varref R_RCV $@23 . LT rargs GT

    LT  shift, and go to state 433


State 372

   66 step: stmnt UNLESS $@11 . stmnt

    error        shift, and go to state 353
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 355
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 434
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 373

  120 Special: for_pre IN varref . r_par @18 for_post

    ')'  shift, and go to state 136

    r_par  go to state 435


State 374

  118 Special: for_pre ':' expr . DOTDOT expr r_par $@17 for_post
  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    DOTDOT      shift, and go to state 436
    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238


State 375

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  199     | expr OR expr .
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  242 Expr: expr . AND Expr
  245     | expr . OR Expr

    AND         shift, and go to state 280
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 199 (expr)


State 376

  240 Expr: Expr . AND Expr
  241     | Expr . AND expr
  243     | Expr . OR Expr
  244     | Expr . OR expr
  245     | expr OR Expr .

    AND  shift, and go to state 282

    $default  reduce using rule 245 (Expr)


State 377

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  198     | expr AND expr .
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  242 Expr: expr . AND Expr
  245     | expr . OR Expr

    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 198 (expr)


State 378

  240 Expr: Expr . AND Expr
  241     | Expr . AND expr
  242     | expr AND Expr .
  243     | Expr . OR Expr
  244     | Expr . OR expr

    $default  reduce using rule 242 (Expr)


State 379

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  242 Expr: expr . AND Expr
  244     | Expr OR expr .
  245     | expr . OR Expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    AND         shift, and go to state 280
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 244 (Expr)


State 380

  240 Expr: Expr . AND Expr
  241     | Expr . AND expr
  243     | Expr . OR Expr
  243     | Expr OR Expr .
  244     | Expr . OR expr

    AND  shift, and go to state 282

    $default  reduce using rule 243 (Expr)


State 381

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  241 Expr: Expr AND expr .
  242     | expr . AND Expr
  245     | expr . OR Expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 241 (Expr)


State 382

  240 Expr: Expr . AND Expr
  240     | Expr AND Expr .
  241     | Expr . AND expr
  243     | Expr . OR Expr
  244     | Expr . OR expr

    $default  reduce using rule 240 (Expr)


State 383

   30 ltl_body: '{' full_expr OS '}' .

    $default  reduce using rule 30 (ltl_body)


State 384

   19 proc: inst proctype NAME $@1 l_par decl r_par . $@2 Opt_priority Opt_enabler body

    $default  reduce using rule 18 ($@2)

    $@2  go to state 437


State 385

   94 ch_init: '[' const_expr ']' . OF '{' typ_list '}'

    OF  shift, and go to state 438


State 386

   89 c_list: CONST ',' . c_list

    CONST  shift, and go to state 293

    c_list  go to state 439


State 387

   91 ivar: vardcl ASGN '{' c_list '}' .

    $default  reduce using rule 91 (ivar)


State 388

  207 expr: RUN aname $@33 l_par . args r_par Opt_priority

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    $default  reduce using rule 261 (args)

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 132
    ltl_expr  go to state 133
    args      go to state 440
    arg       go to state 135


State 389

  208 expr: LEN l_par varref r_par .

    $default  reduce using rule 208 (expr)


State 390

  209 expr: ENABLED l_par expr r_par .

    $default  reduce using rule 209 (expr)


State 391

  210 expr: GET_P l_par expr r_par .

    $default  reduce using rule 210 (expr)


State 392

  220 expr: PC_VAL l_par expr r_par .

    $default  reduce using rule 220 (expr)


State 393

  102 pfld: NAME $@12 '[' expr . ']'
  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ']'         shift, and go to state 441


State 394

  221 expr: PNAME '[' expr ']' . '@' NAME
  222     | PNAME '[' expr ']' . ':' pfld

    ':'  shift, and go to state 442
    '@'  shift, and go to state 443


State 395

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  205     | l_par expr ARROW expr . ':' expr r_par
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ':'         shift, and go to state 444


State 396

  212 expr: varref RCV $@34 '[' . rargs ']'

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 445


State 397

  214 expr: varref R_RCV $@35 '[' . rargs ']'

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 446


State 398

  106 sfld: '.' cmpnd .

    $default  reduce using rule 106 (sfld)


State 399

  135 Stmnt: PRINT l_par STRING $@20 . prargs r_par

    ','  shift, and go to state 447

    $default  reduce using rule 263 (prargs)

    prargs  go to state 448


State 400

  137 Stmnt: PRINTM l_par CONST r_par .

    $default  reduce using rule 137 (Stmnt)


State 401

  136 Stmnt: PRINTM l_par varref r_par .

    $default  reduce using rule 136 (Stmnt)


State 402

  260 two_args: expr ',' . expr

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 449
    ltl_expr  go to state 133


State 403

  133 Stmnt: SET_P l_par two_args r_par .

    $default  reduce using rule 133 (Stmnt)


State 404

   59 sequence: sequence . MS step
  166 option: SEP $@32 sequence . OS

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 167 (OS)

    OS    go to state 450
    semi  go to state 267
    MS    go to state 268


State 405

  124 Special: DO $@19 options OD .

    $default  reduce using rule 124 (Special)


State 406

  110 for_pre: FOR l_par $@14 varref .

    $default  reduce using rule 110 (for_pre)


State 407

  121 Special: SELECT l_par varref ':' . expr DOTDOT expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 451
    ltl_expr  go to state 133


State 408

   59 sequence: sequence . MS step
  151 Stmnt: ATOMIC '{' $@25 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 167 (OS)

    OS    go to state 452
    semi  go to state 267
    MS    go to state 268


State 409

   59 sequence: sequence . MS step
  153 Stmnt: D_STEP '{' $@26 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 167 (OS)

    OS    go to state 453
    semi  go to state 267
    MS    go to state 268


State 410

  246 Probe: FULL l_par varref r_par .

    $default  reduce using rule 246 (Probe)


State 411

  248 Probe: EMPTY l_par varref r_par .

    $default  reduce using rule 248 (Probe)


State 412

  247 Probe: NFULL l_par varref r_par .

    $default  reduce using rule 247 (Probe)


State 413

  249 Probe: NEMPTY l_par varref r_par .

    $default  reduce using rule 249 (Probe)


State 414

   85 vref_lst: varref ',' vref_lst .

    $default  reduce using rule 85 (vref_lst)


State 415

  127 Special: NAME ':' . stmnt
  128        | NAME ':' .

    error        shift, and go to state 353
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 355
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    SEMI    reduce using rule 128 (Special)
    ARROW   reduce using rule 128 (Special)
    FI      reduce using rule 128 (Special)
    OD      reduce using rule 128 (Special)
    SEP     reduce using rule 128 (Special)
    UNLESS  reduce using rule 128 (Special)
    '}'     reduce using rule 128 (Special)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 357
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 416

  158 Stmnt: INAME $@28 l_par args . r_par $@29 Stmnt

    ')'  shift, and go to state 136

    r_par  go to state 454


State 417

  155 Stmnt: '{' $@27 sequence OS . '}'

    '}'  shift, and go to state 455


State 418

   57 body: '{' $@9 sequence OS $@10 '}' .

    $default  reduce using rule 57 (body)


State 419

  161 Stmnt: varref ASGN INAME $@30 . l_par args r_par $@31 Stmnt

    '('  shift, and go to state 58

    l_par  go to state 456


State 420

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  266 margs: expr . l_par arg r_par
  267 arg: expr .
  268    | expr . ',' arg

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    '('         shift, and go to state 58
    ','         shift, and go to state 239

    $default  reduce using rule 267 (arg)

    l_par  go to state 457


State 421

  116 Special: varref SND $@16 margs .

    $default  reduce using rule 116 (Special)


State 422

  265 margs: arg .

    $default  reduce using rule 265 (margs)


State 423

  147 Stmnt: varref O_SND $@24 margs .

    $default  reduce using rule 147 (Stmnt)


State 424

  270 rarg: EVAL . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 458


State 425

  271 rarg: CONST .

    $default  reduce using rule 271 (rarg)


State 426

  272 rarg: '-' . CONST

    CONST  shift, and go to state 459


State 427

  276 rargs: l_par . rargs r_par

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 460


State 428

  269 rarg: varref .

    $default  reduce using rule 269 (rarg)


State 429

  273 rargs: rarg .
  274      | rarg . ',' rargs
  275      | rarg . l_par rargs r_par

    '('  shift, and go to state 58
    ','  shift, and go to state 461

    $default  reduce using rule 273 (rargs)

    l_par  go to state 462


State 430

  114 Special: varref RCV $@15 rargs .

    $default  reduce using rule 114 (Special)


State 431

  143 Stmnt: varref RCV $@22 LT . rargs GT

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 463


State 432

  141 Stmnt: varref R_RCV $@21 rargs .

    $default  reduce using rule 141 (Stmnt)


State 433

  145 Stmnt: varref R_RCV $@23 LT . rargs GT

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 464


State 434

   66 step: stmnt UNLESS $@11 stmnt .

    $default  reduce using rule 66 (step)


State 435

  120 Special: for_pre IN varref r_par . @18 for_post

    $default  reduce using rule 119 (@18)

    @18  go to state 465


State 436

  118 Special: for_pre ':' expr DOTDOT . expr r_par $@17 for_post

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 466
    ltl_expr  go to state 133


State 437

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 . Opt_priority Opt_enabler body

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 226 (Opt_priority)

    Opt_priority  go to state 467


State 438

   94 ch_init: '[' const_expr ']' OF . '{' typ_list '}'

    '{'  shift, and go to state 468


State 439

   89 c_list: CONST ',' c_list .

    $default  reduce using rule 89 (c_list)


State 440

  207 expr: RUN aname $@33 l_par args . r_par Opt_priority

    ')'  shift, and go to state 136

    r_par  go to state 469


State 441

  102 pfld: NAME $@12 '[' expr ']' .

    $default  reduce using rule 102 (pfld)


State 442

  222 expr: PNAME '[' expr ']' ':' . pfld

    NAME  shift, and go to state 119

    pfld  go to state 470


State 443

  221 expr: PNAME '[' expr ']' '@' . NAME

    NAME  shift, and go to state 471


State 444

  205 expr: l_par expr ARROW expr ':' . expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 472
    ltl_expr  go to state 133


State 445

  212 expr: varref RCV $@34 '[' rargs . ']'

    ']'  shift, and go to state 473


State 446

  214 expr: varref R_RCV $@35 '[' rargs . ']'

    ']'  shift, and go to state 474


State 447

  264 prargs: ',' . arg

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 132
    ltl_expr  go to state 133
    arg       go to state 475


State 448

  135 Stmnt: PRINT l_par STRING $@20 prargs . r_par

    ')'  shift, and go to state 136

    r_par  go to state 476


State 449

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  260 two_args: expr ',' expr .

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238

    $default  reduce using rule 260 (two_args)


State 450

  166 option: SEP $@32 sequence OS .

    $default  reduce using rule 166 (option)


State 451

  121 Special: SELECT l_par varref ':' expr . DOTDOT expr r_par
  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    DOTDOT      shift, and go to state 477
    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238


State 452

  151 Stmnt: ATOMIC '{' $@25 sequence OS . '}'

    '}'  shift, and go to state 478


State 453

  153 Stmnt: D_STEP '{' $@26 sequence OS . '}'

    '}'  shift, and go to state 479


State 454

  158 Stmnt: INAME $@28 l_par args r_par . $@29 Stmnt

    $default  reduce using rule 157 ($@29)

    $@29  go to state 480


State 455

  155 Stmnt: '{' $@27 sequence OS '}' .

    $default  reduce using rule 155 (Stmnt)


State 456

  161 Stmnt: varref ASGN INAME $@30 l_par . args r_par $@31 Stmnt

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    $default  reduce using rule 261 (args)

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 132
    ltl_expr  go to state 133
    args      go to state 481
    arg       go to state 135


State 457

  266 margs: expr l_par . arg r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 132
    ltl_expr  go to state 133
    arg       go to state 482


State 458

  270 rarg: EVAL l_par . expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 483
    ltl_expr  go to state 133


State 459

  272 rarg: '-' CONST .

    $default  reduce using rule 272 (rarg)


State 460

  276 rargs: l_par rargs . r_par

    ')'  shift, and go to state 136

    r_par  go to state 484


State 461

  274 rargs: rarg ',' . rargs

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 485


State 462

  275 rargs: rarg l_par . rargs r_par

    EVAL   shift, and go to state 424
    CONST  shift, and go to state 425
    NAME   shift, and go to state 119
    '-'    shift, and go to state 426
    '('    shift, and go to state 58

    l_par   go to state 427
    varref  go to state 428
    pfld    go to state 130
    cmpnd   go to state 131
    rarg    go to state 429
    rargs   go to state 486


State 463

  143 Stmnt: varref RCV $@22 LT rargs . GT

    GT  shift, and go to state 487


State 464

  145 Stmnt: varref R_RCV $@23 LT rargs . GT

    GT  shift, and go to state 488


State 465

  120 Special: for_pre IN varref r_par @18 . for_post

    SEMI  shift, and go to state 489
    '{'   shift, and go to state 490

    for_post  go to state 491


State 466

  118 Special: for_pre ':' expr DOTDOT expr . r_par $@17 for_post
  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 492


State 467

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 Opt_priority . Opt_enabler body

    PROVIDED  shift, and go to state 493

    $default  reduce using rule 250 (Opt_enabler)

    Opt_enabler  go to state 494


State 468

   94 ch_init: '[' const_expr ']' OF '{' . typ_list '}'

    error  shift, and go to state 495
    TYPE   shift, and go to state 496
    UNAME  shift, and go to state 497

    basetype  go to state 498
    typ_list  go to state 499


State 469

  207 expr: RUN aname $@33 l_par args r_par . Opt_priority

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 226 (Opt_priority)

    Opt_priority  go to state 500


State 470

  222 expr: PNAME '[' expr ']' ':' pfld .

    $default  reduce using rule 222 (expr)


State 471

  221 expr: PNAME '[' expr ']' '@' NAME .

    $default  reduce using rule 221 (expr)


State 472

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  205     | l_par expr ARROW expr ':' expr . r_par
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 501


State 473

  212 expr: varref RCV $@34 '[' rargs ']' .

    $default  reduce using rule 212 (expr)


State 474

  214 expr: varref R_RCV $@35 '[' rargs ']' .

    $default  reduce using rule 214 (expr)


State 475

  264 prargs: ',' arg .

    $default  reduce using rule 264 (prargs)


State 476

  135 Stmnt: PRINT l_par STRING $@20 prargs r_par .

    $default  reduce using rule 135 (Stmnt)


State 477

  121 Special: SELECT l_par varref ':' expr DOTDOT . expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par     go to state 127
    cexpr     go to state 128
    varref    go to state 129
    pfld      go to state 130
    cmpnd     go to state 131
    expr      go to state 502
    ltl_expr  go to state 133


State 478

  151 Stmnt: ATOMIC '{' $@25 sequence OS '}' .

    $default  reduce using rule 151 (Stmnt)


State 479

  153 Stmnt: D_STEP '{' $@26 sequence OS '}' .

    $default  reduce using rule 153 (Stmnt)


State 480

  158 Stmnt: INAME $@28 l_par args r_par $@29 . Stmnt

    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    ELSE         shift, and go to state 151
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    varref     go to state 503
    pfld       go to state 130
    cmpnd      go to state 131
    Stmnt      go to state 504
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 481

  161 Stmnt: varref ASGN INAME $@30 l_par args . r_par $@31 Stmnt

    ')'  shift, and go to state 136

    r_par  go to state 505


State 482

  266 margs: expr l_par arg . r_par

    ')'  shift, and go to state 136

    r_par  go to state 506


State 483

  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr
  270 rarg: EVAL l_par expr . r_par

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 507


State 484

  276 rargs: l_par rargs r_par .

    $default  reduce using rule 276 (rargs)


State 485

  274 rargs: rarg ',' rargs .

    $default  reduce using rule 274 (rargs)


State 486

  275 rargs: rarg l_par rargs . r_par

    ')'  shift, and go to state 136

    r_par  go to state 508


State 487

  143 Stmnt: varref RCV $@22 LT rargs GT .

    $default  reduce using rule 143 (Stmnt)


State 488

  145 Stmnt: varref R_RCV $@23 LT rargs GT .

    $default  reduce using rule 145 (Stmnt)


State 489

  112 for_post: SEMI . '{' sequence OS '}'

    '{'  shift, and go to state 509


State 490

  111 for_post: '{' . sequence OS '}'

    error        shift, and go to state 143
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 162
    NAME         shift, and go to state 163
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    sequence   go to state 510
    step       go to state 169
    vis        go to state 32
    one_decl   go to state 170
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 172
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 491

  120 Special: for_pre IN varref r_par @18 for_post .

    $default  reduce using rule 120 (Special)


State 492

  118 Special: for_pre ':' expr DOTDOT expr r_par . $@17 for_post

    $default  reduce using rule 117 ($@17)

    $@17  go to state 511


State 493

  251 Opt_enabler: PROVIDED . l_par full_expr r_par
  252            | PROVIDED . error

    error  shift, and go to state 512
    '('    shift, and go to state 58

    l_par  go to state 513


State 494

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler . body

    '{'  shift, and go to state 66

    body  go to state 514


State 495

  257 basetype: error .

    $default  reduce using rule 257 (basetype)


State 496

  255 basetype: TYPE . oname

    ':'  shift, and go to state 515

    $default  reduce using rule 253 (oname)

    oname  go to state 516


State 497

  256 basetype: UNAME .

    $default  reduce using rule 256 (basetype)


State 498

  258 typ_list: basetype .
  259         | basetype . ',' typ_list

    ','  shift, and go to state 517

    $default  reduce using rule 258 (typ_list)


State 499

   94 ch_init: '[' const_expr ']' OF '{' typ_list . '}'

    '}'  shift, and go to state 518


State 500

  207 expr: RUN aname $@33 l_par args r_par Opt_priority .

    $default  reduce using rule 207 (expr)


State 501

  205 expr: l_par expr ARROW expr ':' expr r_par .

    $default  reduce using rule 205 (expr)


State 502

  121 Special: SELECT l_par varref ':' expr DOTDOT expr . r_par
  184 expr: expr . '+' expr
  185     | expr . '-' expr
  186     | expr . '*' expr
  187     | expr . '/' expr
  188     | expr . '%' expr
  189     | expr . '&' expr
  190     | expr . '^' expr
  191     | expr . '|' expr
  192     | expr . GT expr
  193     | expr . LT expr
  194     | expr . GE expr
  195     | expr . LE expr
  196     | expr . EQ expr
  197     | expr . NE expr
  198     | expr . AND expr
  199     | expr . OR expr
  200     | expr . LSHIFT expr
  201     | expr . RSHIFT expr
  230 ltl_expr: expr . UNTIL expr
  231         | expr . RELEASE expr
  232         | expr . WEAK_UNTIL expr
  233         | expr . IMPLIES expr
  234         | expr . EQUIV expr

    IMPLIES     shift, and go to state 216
    EQUIV       shift, and go to state 217
    OR          shift, and go to state 218
    AND         shift, and go to state 219
    UNTIL       shift, and go to state 220
    WEAK_UNTIL  shift, and go to state 221
    RELEASE     shift, and go to state 222
    '|'         shift, and go to state 223
    '^'         shift, and go to state 224
    '&'         shift, and go to state 225
    EQ          shift, and go to state 226
    NE          shift, and go to state 227
    GT          shift, and go to state 228
    LT          shift, and go to state 229
    GE          shift, and go to state 230
    LE          shift, and go to state 231
    LSHIFT      shift, and go to state 232
    RSHIFT      shift, and go to state 233
    '+'         shift, and go to state 234
    '-'         shift, and go to state 235
    '*'         shift, and go to state 236
    '/'         shift, and go to state 237
    '%'         shift, and go to state 238
    ')'         shift, and go to state 136

    r_par  go to state 519


State 503

  130 Stmnt: varref . ASGN full_expr
  131      | varref . INCR
  132      | varref . DECR
  141      | varref . R_RCV $@21 rargs
  143      | varref . RCV $@22 LT rargs GT
  145      | varref . R_RCV $@23 LT rargs GT
  147      | varref . O_SND $@24 margs
  161      | varref . ASGN INAME $@30 l_par args r_par $@31 Stmnt
  212 expr: varref . RCV $@34 '[' rargs ']'
  214     | varref . R_RCV $@35 '[' rargs ']'
  215     | varref .

    ASGN   shift, and go to state 269
    O_SND  shift, and go to state 271
    RCV    shift, and go to state 520
    R_RCV  shift, and go to state 273
    INCR   shift, and go to state 274
    DECR   shift, and go to state 275

    $default  reduce using rule 215 (expr)


State 504

  158 Stmnt: INAME $@28 l_par args r_par $@29 Stmnt .

    $default  reduce using rule 158 (Stmnt)


State 505

  161 Stmnt: varref ASGN INAME $@30 l_par args r_par . $@31 Stmnt

    $default  reduce using rule 160 ($@31)

    $@31  go to state 521


State 506

  266 margs: expr l_par arg r_par .

    $default  reduce using rule 266 (margs)


State 507

  270 rarg: EVAL l_par expr r_par .

    $default  reduce using rule 270 (rarg)


State 508

  275 rargs: rarg l_par rargs r_par .

    $default  reduce using rule 275 (rargs)


State 509

  112 for_post: SEMI '{' . sequence OS '}'

    error        shift, and go to state 143
    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    GOTO         shift, and go to state 149
    BREAK        shift, and go to state 150
    ELSE         shift, and go to state 151
    IF           shift, and go to state 152
    DO           shift, and go to state 153
    FOR          shift, and go to state 154
    SELECT       shift, and go to state 155
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    XU           shift, and go to state 162
    NAME         shift, and go to state 163
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    sequence   go to state 522
    step       go to state 169
    vis        go to state 32
    one_decl   go to state 170
    varref     go to state 171
    pfld       go to state 130
    cmpnd      go to state 131
    stmnt      go to state 172
    for_pre    go to state 173
    Special    go to state 174
    Stmnt      go to state 175
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 510

   59 sequence: sequence . MS step
  111 for_post: '{' sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 167 (OS)

    OS    go to state 523
    semi  go to state 267
    MS    go to state 268


State 511

  118 Special: for_pre ':' expr DOTDOT expr r_par $@17 . for_post

    SEMI  shift, and go to state 489
    '{'   shift, and go to state 490

    for_post  go to state 524


State 512

  252 Opt_enabler: PROVIDED error .

    $default  reduce using rule 252 (Opt_enabler)


State 513

  251 Opt_enabler: PROVIDED l_par . full_expr r_par

    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58

    l_par      go to state 166
    cexpr      go to state 128
    varref     go to state 129
    pfld       go to state 130
    cmpnd      go to state 131
    expr       go to state 176
    full_expr  go to state 525
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 514

   19 proc: inst proctype NAME $@1 l_par decl r_par $@2 Opt_priority Opt_enabler body .

    $default  reduce using rule 19 (proc)


State 515

  254 oname: ':' . NAME

    NAME  shift, and go to state 526


State 516

  255 basetype: TYPE oname .

    $default  reduce using rule 255 (basetype)


State 517

  259 typ_list: basetype ',' . typ_list

    error  shift, and go to state 495
    TYPE   shift, and go to state 496
    UNAME  shift, and go to state 497

    basetype  go to state 498
    typ_list  go to state 527


State 518

   94 ch_init: '[' const_expr ']' OF '{' typ_list '}' .

    $default  reduce using rule 94 (ch_init)


State 519

  121 Special: SELECT l_par varref ':' expr DOTDOT expr r_par .

    $default  reduce using rule 121 (Special)


State 520

  143 Stmnt: varref RCV . $@22 LT rargs GT
  212 expr: varref RCV . $@34 '[' rargs ']'

    '['       reduce using rule 211 ($@34)
    $default  reduce using rule 142 ($@22)

    $@22  go to state 369
    $@34  go to state 307


State 521

  161 Stmnt: varref ASGN INAME $@30 l_par args r_par $@31 . Stmnt

    ASSERT       shift, and go to state 144
    PRINT        shift, and go to state 145
    PRINTM       shift, and go to state 146
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 110
    RUN          shift, and go to state 111
    LEN          shift, and go to state 112
    ENABLED      shift, and go to state 113
    SET_P        shift, and go to state 147
    GET_P        shift, and go to state 114
    PC_VAL       shift, and go to state 115
    RETURN       shift, and go to state 148
    ELSE         shift, and go to state 151
    ATOMIC       shift, and go to state 156
    D_STEP       shift, and go to state 157
    TIMEOUT      shift, and go to state 116
    NONPROGRESS  shift, and go to state 117
    FULL         shift, and go to state 158
    EMPTY        shift, and go to state 159
    NFULL        shift, and go to state 160
    NEMPTY       shift, and go to state 161
    CONST        shift, and go to state 118
    NAME         shift, and go to state 119
    PNAME        shift, and go to state 120
    INAME        shift, and go to state 164
    SND          shift, and go to state 121
    ALWAYS       shift, and go to state 122
    EVENTUALLY   shift, and go to state 123
    NEXT         shift, and go to state 124
    '-'          shift, and go to state 125
    '~'          shift, and go to state 126
    '('          shift, and go to state 58
    '{'          shift, and go to state 165

    l_par      go to state 166
    ccode      go to state 167
    cexpr      go to state 128
    varref     go to state 503
    pfld       go to state 130
    cmpnd      go to state 131
    Stmnt      go to state 528
    expr       go to state 176
    full_expr  go to state 177
    ltl_expr   go to state 133
    Expr       go to state 178
    Probe      go to state 179


State 522

   59 sequence: sequence . MS step
  112 for_post: SEMI '{' sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 167 (OS)

    OS    go to state 529
    semi  go to state 267
    MS    go to state 268


State 523

  111 for_post: '{' sequence OS . '}'

    '}'  shift, and go to state 530


State 524

  118 Special: for_pre ':' expr DOTDOT expr r_par $@17 for_post .

    $default  reduce using rule 118 (Special)


State 525

  251 Opt_enabler: PROVIDED l_par full_expr . r_par

    ')'  shift, and go to state 136

    r_par  go to state 531


State 526

  254 oname: ':' NAME .

    $default  reduce using rule 254 (oname)


State 527

  259 typ_list: basetype ',' typ_list .

    $default  reduce using rule 259 (typ_list)


State 528

  161 Stmnt: varref ASGN INAME $@30 l_par args r_par $@31 Stmnt .

    $default  reduce using rule 161 (Stmnt)


State 529

  112 for_post: SEMI '{' sequence OS . '}'

    '}'  shift, and go to state 532


State 530

  111 for_post: '{' sequence OS '}' .

    $default  reduce using rule 111 (for_post)


State 531

  251 Opt_enabler: PROVIDED l_par full_expr r_par .

    $default  reduce using rule 251 (Opt_enabler)


State 532

  112 for_post: SEMI '{' sequence OS '}' .

    $default  reduce using rule 112 (for_post)
